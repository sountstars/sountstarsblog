{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(t,s,a){t.exports=a.p+\"assets/img/lifecycle.da72ecc0.jpg\"},367:function(t,s,a){t.exports=a.p+\"assets/img/lifecycle-new.9f81eb0b.jpg\"},414:function(t,s,a){\"use strict\";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"react生命周期\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react生命周期\"}},[t._v(\"#\")]),t._v(\" react生命周期\")]),t._v(\" \"),e(\"p\"),e(\"div\",{staticClass:\"table-of-contents\"},[e(\"ul\",[e(\"li\",[e(\"a\",{attrs:{href:\"#挂载阶段\"}},[t._v(\"挂载阶段\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#更新阶段\"}},[t._v(\"更新阶段\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#卸载阶段\"}},[t._v(\"卸载阶段\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#getderivedstatefromprops-nextprops-prevstate\"}},[t._v(\"getDerivedStateFromProps(nextProps, prevState)\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#componentdidcatch-err-info\"}},[t._v(\"componentDidCatch(err,info)\")])])])]),e(\"p\"),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:a(366),alt:\"solar\"}})]),t._v(\" \"),e(\"h2\",{attrs:{id:\"挂载阶段\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#挂载阶段\"}},[t._v(\"#\")]),t._v(\" 挂载阶段\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"首次render之后调用componentDidMount，其它render结束之后都是调用\"),e(\"code\",[t._v(\"componentDidUpdate(更新阶段)\")])])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentWillMount\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"   \\n在组件挂载之前调用，且全局只调用一次\\n\")])])]),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentDidMount\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n在组件挂载完成后调用，且全局只调用一次。\\n可以在这里使用refs，获取真实dom元素\\n\")])])]),e(\"h2\",{attrs:{id:\"更新阶段\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#更新阶段\"}},[t._v(\"#\")]),t._v(\" 更新阶段\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"setState引起的state更新或父组件重新render引起的props更新\")]),t._v(\" \"),e(\"li\",[t._v(\"更新后的state和props相对之前无论是否有变化，都将引起子组件的重新render\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//props发生变化以及父组件重新渲染时都会触发\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentWillReceiveProps\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nextProps \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"   nextProps获取变化后的props参数\\n\")])])]),e(\"ul\",[e(\"li\",[e(\"code\",[t._v(\"优化性能\")])]),t._v(\" \"),e(\"li\",[t._v(\"调用setState后都会调用shouldComponentUpdate判断是否需要重新渲染组件。\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"shouldComponentUpdate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nextProps\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"nextState\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"    默认返回\"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"，需要重新render\\n\")])])]),e(\"ul\",[e(\"li\",[t._v(\"组件即将被更新时触发\")]),t._v(\" \"),e(\"li\",[t._v(\"shouldComponentUpdate返回true或者调用forceUpdate之后 , 会被调用\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentWillUpdate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nextProps\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"nextState\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"不能在该钩子中setState，否则会触发重复循环\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),e(\"ul\",[e(\"li\",[t._v(\"此方法在组件更新后被调用\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentDidUpdate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"prevProps\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" prevState\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"setState可能会触发重复渲染\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n可以操作组件更新的\"),e(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DOM\")]),t._v(\"，prevProps和prevState这两个参数指的是组件更新前的props和state\\n\")])])]),e(\"h2\",{attrs:{id:\"卸载阶段\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#卸载阶段\"}},[t._v(\"#\")]),t._v(\" 卸载阶段\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"此方法在组件被卸载前调用\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentWillUnmount\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \\n清除组件中使用的定时器、清除componentDidMount中手动创建的\"),e(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DOM\")]),t._v(\"元素等等，以避免引起内存泄漏\\n\")])])]),e(\"p\",[e(\"img\",{attrs:{src:a(367),alt:\"solar\"}})]),t._v(\" \"),e(\"h2\",{attrs:{id:\"getderivedstatefromprops-nextprops-prevstate\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#getderivedstatefromprops-nextprops-prevstate\"}},[t._v(\"#\")]),t._v(\" getDerivedStateFromProps(nextProps, prevState)\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"这个方法在 \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"render\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"之后，componentDidUpdate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" 之前调用。\\n该方法传入的两个参数：prevProps表示更新前的 props，prevState表示更新前的 state\\n返回值称为一个快照（snapshot），如果不需要 snapshot，\\n则必须显示的返回 \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),t._v(\" —— 因为返回值将作为 \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentDidUpdate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" 的第三个参数使用。\\n所以这个函数必须要配合 \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"componentDidUpdate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" 一起使用。\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"componentdidcatch-err-info\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#componentdidcatch-err-info\"}},[t._v(\"#\")]),t._v(\" componentDidCatch(err,info)\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"任何子组件在渲染期间，生命周期方法中或者构造函数 constructor 发生错误时调用。\\n两个参数：err表示抛出的错误，info表示带有componentStack key的对象，其中包含有关组件引发错误的栈信息。\\n\")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}