(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{461:function(t,s,a){"use strict";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"regexp正则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp正则"}},[t._v("#")]),t._v(" RegExp正则")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#正则方法"}},[t._v("正则方法")])]),a("li",[a("a",{attrs:{href:"#正则的修饰符、元字符"}},[t._v("正则的修饰符、元字符")]),a("ul",[a("li",[a("a",{attrs:{href:"#量词元字符"}},[t._v("量词元字符")])])])]),a("li",[a("a",{attrs:{href:"#修饰符有三种"}},[t._v("修饰符有三种")])]),a("li",[a("a",{attrs:{href:"#特殊元字符"}},[t._v("特殊元字符")]),a("ul",[a("li",[a("a",{attrs:{href:"#正向预查、负向预查"}},[t._v("正向预查、负向预查")])])])]),a("li",[a("a",{attrs:{href:"#构造函数方式"}},[t._v("构造函数方式")])]),a("li",[a("a",{attrs:{href:"#字面量方式"}},[t._v("字面量方式")])]),a("li",[a("a",{attrs:{href:"#示例"}},[t._v("示例")])]),a("li",[a("a",{attrs:{href:"#参考文档"}},[t._v("参考文档")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"正则方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则方法"}},[t._v("#")]),t._v(" 正则方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检验 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串中有没有正则能匹配到的内容，返回值: true false")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//捕获 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法用于检索字符串中的正则表达式的匹配。 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把匹配到的字符放入到数组中，不匹配返回null")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("替换成什么 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" callback（替换成什么）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"正则的修饰符、元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则的修饰符、元字符"}},[t._v("#")]),t._v(" 正则的修饰符、元字符")]),t._v(" "),a("h3",{attrs:{id:"量词元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词元字符"}},[t._v("#")]),t._v(" 量词元字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("常用指令")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("在js中表示换行")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("表示出现0次到多次")])]),t._v(" "),a("tr",[a("td",[t._v("？")]),t._v(" "),a("td",[t._v("表示出现0次或1次")])]),t._v(" "),a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("表示至少出现一次")])]),t._v(" "),a("tr",[a("td",[t._v("{n}")]),t._v(" "),a("td",[t._v("表示出现n次")])]),t._v(" "),a("tr",[a("td",[t._v("{n,}")]),t._v(" "),a("td",[t._v("表示至少出现n次")])]),t._v(" "),a("tr",[a("td",[t._v("{n,m}")]),t._v(" "),a("td",[t._v("最小是n，最大是m，（n，m都是一个非负整数")])])])]),t._v(" "),a("p",[a("code",[t._v("中文的范围：[ \\u4e00 - \\u9fa5 ]")]),t._v("（记忆：有事100，有酒罚我）")]),t._v(" "),a("h2",{attrs:{id:"修饰符有三种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符有三种"}},[t._v("#")]),t._v(" 修饰符有三种")]),t._v(" "),a("p",[t._v("| 修饰符 |说明|\n| i| 忽略大小写匹配|\n|g |全局匹配，即是匹配一个后继续匹配，直到结束|\n|m |多行匹配，即是遇到换行后不停止匹配，直到结束|")]),t._v(" "),a("h2",{attrs:{id:"特殊元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊元字符"}},[t._v("#")]),t._v(" 特殊元字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\d")]),t._v(" "),a("td",[t._v("匹配0-9中任意一个数字")])]),t._v(" "),a("tr",[a("td",[t._v("\\D")]),t._v(" "),a("td",[t._v("除了0-9以外的任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\w")]),t._v(" "),a("td",[t._v("数字、字母、下划线中任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\W")]),t._v(" "),a("td",[t._v("除了数字、字母、下划线以外任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\s")]),t._v(" "),a("td",[t._v("匹配一个空白符（空格；制表符（tab）\\t ；\\n换行符 ；\\r回车...）")])]),t._v(" "),a("tr",[a("td",[t._v("\\S")]),t._v(" "),a("td",[t._v("除了空白符以外任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("匹配单词边界（边界字母和非字母连接的地方）")])]),t._v(" "),a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("匹配一个换行符")])]),t._v(" "),a("tr",[a("td",[t._v(".")]),t._v(" "),a("td",[t._v("除换行符\\n以外任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\")]),t._v(" "),a("td",[t._v("转义符，把有特殊意义的字符转义为普通字符")])]),t._v(" "),a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("(读作caret）表示以某个元字符开头")])]),t._v(" "),a("tr",[a("td",[t._v("$")]),t._v(" "),a("td",[t._v("表示以某个元字符结尾")])]),t._v(" "),a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("y")])]),t._v(" "),a("tr",[a("td",[t._v("[]")]),t._v(" "),a("td",[t._v("表示匹配[ ]中任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("[xyz]")]),t._v(" "),a("td",[t._v("表示x/y/z中任意一个")])]),t._v(" "),a("tr",[a("td",[t._v("[a-z]")]),t._v(" "),a("td",[t._v("表示匹配a-z中的任意一个小写字母")])]),t._v(" "),a("tr",[a("td",[t._v("[A-Z]")]),t._v(" "),a("td",[t._v("表示匹配A-Z中的任意一个大写字母")])]),t._v(" "),a("tr",[a("td",[t._v("[0-9]")]),t._v(" "),a("td",[t._v("表示匹配0-9中的任意一个数字，等价于\\d")])]),t._v(" "),a("tr",[a("td",[t._v("[^abc]")]),t._v(" "),a("td",[t._v("表示除了a、b、c以外的任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("()")]),t._v(" "),a("td",[t._v("正则分组")])]),t._v(" "),a("tr",[a("td",[t._v("(?: )")]),t._v(" "),a("td",[t._v("表示当前分组只匹配不捕获（取消分组捕获）")])]),t._v(" "),a("tr",[a("td",[t._v("(?=)")]),t._v(" "),a("td",[t._v("正向预查")])]),t._v(" "),a("tr",[a("td",[t._v("(?!)")]),t._v(" "),a("td",[t._v("负向预查")])])])]),t._v(" "),a("h3",{attrs:{id:"正向预查、负向预查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正向预查、负向预查"}},[t._v("#")]),t._v(" 正向预查、负向预查")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("x(?=y)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示匹配x，并且仅当x后紧跟着一个y（匹配紧跟着y的x）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("x(?!y)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示匹配x，并且仅当x后没有y（匹配后面没有y的x）")]),t._v("\n")])])]),a("h2",{attrs:{id:"构造函数方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数方式"}},[t._v("#")]),t._v(" 构造函数方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"字面量方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字面量方式"}},[t._v("#")]),t._v(" 字面量方式")]),t._v(" "),a("p",[t._v("两个斜线内为正则的内容，后面可以跟修饰符，与第一种构造函数方式相比更简洁，缺点是正则内容"),a("code",[t._v("不能拼接")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aBcd efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aBcd efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["aBcd"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aBcd efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "cd", "efg"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aBcd efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["aBcd", "efg"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aB\\ncd\\n efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("m")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aB\\ncd\\n efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aB\\ncd\\n efg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-z]+")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gm")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "cd"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 注意不是 ["a", "cd", "efg"]')]),t._v("\n")])])]),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[a("code",[t._v("手机号*过滤")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123567905849'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(\\d{3})(\\d*?)(\\d{4})$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1****$3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 扩展性好")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123567905849'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'****'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123567905849'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 快")]),t._v("\n")])])]),a("p",[a("code",[t._v("用正则写一个验证23-68中的数字")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[23-68]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是表示23-68；而是表示2或3-6或8")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 将范围拆分为23-29；30-59；60-68 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(2[3-9]|[3-5]\\d|6[0-8])$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n")])])]),a("p",[a("code",[t._v("写一个正则，匹配第二个字母和第四个字母相同")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\\数字 表示(引用)数字代表的分组的内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-z]([a-z])[a-z]\\1$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'java'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fear'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/any86/any-rule",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文档"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);